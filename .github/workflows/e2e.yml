name: e2e tests

on:
  workflow_call:
    secrets:
      FLOWZONE_TOKEN:
        description: "Personal access token (PAT) for the GitHub service account with admin/owner permissions"
        required: true
      GPG_PRIVATE_KEY:
        description: "GPG private key exported with `gpg --armor --export-secret-keys ...` to sign commits"
        required: false
      GPG_PASSPHRASE:
        description: "Passphrase to decrypt GPG private key"
        required: false

jobs:
  draft:
    name: "Draft PRs"
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    # skip e2e for forks
    if: |
        github.event.pull_request.head.repo.full_name == github.repository &&
        github.event_name == 'pull_request'
    # https://docs.github.com/en/actions/using-jobs/using-concurrency
    concurrency:
      group: flowzone-${{ matrix.repository }}-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: .
        # shell: bash --noprofile --norc -eo pipefail -x {0}

    strategy:
      fail-fast: false
      matrix:
        # TODO: changing these currently requires an admin to manually
        # update the branch protection rules on the Flowzone repository settings
        repository:
          [
            balena-io/balena-api,
            balena-io/docs,
            balena-io/environment-staging,
            balena-io-modules/open-balena-base,
            balena-os/balena-engine,
            balenaltd/handbook,
            product-os/environment-staging,
            balena-os/fatrw,
          ]

    env:
      # environment variables used by gh CLI
      # https://cli.github.com/manual/gh_help_environment
      GH_REPO: ${{ matrix.repository }}
      GH_TOKEN: ${{ secrets.FLOWZONE_TOKEN }}
      GH_PROMPT_DISABLED: "true"
      GH_DEBUG: "true"
      GH_PAGER: "cat"
      pr_branch: "flowzone/${{ github.head_ref || github.ref_name }}"
      pr_title: "Test Flowzone PR ${{ github.event.pull_request.number }}"

    steps:
      - name: Get repo settings
        if: github.event.action != 'closed'
        id: repo
        run: |
          echo "default_branch=$(gh api repos/{owner}/{repo} --jq '.default_branch')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        if: github.event.action != 'closed'
        with:
          repository: ${{ matrix.repository }}
          token: ${{ secrets.FLOWZONE_TOKEN }}
          ref: ${{ steps.repo.outputs.default_branch }}

      # import gpg key for signed commits
      - name: Import GPG key
        if: github.event.action != 'closed'
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      # set flowzone tag to the current HEAD sha
      # disable branch protection
      # commit changes
      - name: Update Flowzone workflow
        if: github.event.action != 'closed'
        env:
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
        run: |
          yq '(.jobs.* | select(.uses | contains("flowzone.yml"))).uses |= sub("(?P<uses>.+)@.+"; "$1@${{ github.event.pull_request.head.sha }}")' -i .github/workflows/flowzone.yml

          yq '(.jobs.* | select(.uses | contains("flowzone.yml"))).uses |= . line_comment="${{ github.run_id }}-${{ github.run_attempt }}"' -i .github/workflows/flowzone.yml

          yq '(.jobs.* | select(.uses | contains("flowzone.yml"))).with.protect_branch |= false' -i .github/workflows/flowzone.yml

          git add .github/workflows/flowzone.yml
          git commit -m "patch: ${{ env.pr_title }}" -m "Updated: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      # create a new pull request if it doesn't already exist
      - name: Create pull request
        if: github.event.action != 'closed'
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04 # v4.2.3
        id: cpr
        with:
          token: ${{ secrets.FLOWZONE_TOKEN }}
          branch: ${{ env.pr_branch }}
          title: "${{ env.pr_title }}"
          body: |
            Auto-generated by https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}

            Will be closed automatically once the PR is merged.
          labels: |
            flowzone
            draft
          draft: true
          delete-branch: true

      # return failure if any checks failed
      # return failure if any checks were cancelled
      # loop again if any checks are still in progress
      # loop again if no checks have completed yet
      # return failure if checks are unchanged since last loop and the checks are empty
      # return success if checks are unchanged since last loop and at least once check is completed
      # (else) loop again if checks have changed since last loop (avoid race conditions)
      - name: Wait for all checks to finish
        if: steps.cpr.outputs.pull-request-number != ''
        env:
          flowzone_re: "^Flowzone"
        run: |
          while true
          do
            sleep 30

            prev_checks="${checks}"

            checks="$(gh pr status --json statusCheckRollup,number --jq '[.createdBy[] |
              select(.number == ${{ steps.cpr.outputs.pull-request-number}}) | .statusCheckRollup[] |
              select(.__typename == "CheckRun") |
              select(.name | startswith("Flowzone")) |
              {conclusion,status,name}]' || true)"

            echo "${checks}" | jq

            jq -r '.[].conclusion' <<< "${checks}" | grep -q '^FAILURE$' && exit 1
            jq -r '.[].conclusion' <<< "${checks}" | grep -q '^CANCELLED$' && exit 1

            jq -r '.[].status' <<< "${checks}" | grep -q '^IN_PROGRESS$' && continue
            jq -r '.[].status' <<< "${checks}" | grep -q '^QUEUED$' && continue
            jq -r '.[].status' <<< "${checks}" | grep -q '^PENDING$' && continue

            if [ "${prev_checks}" == "${checks}" ]
            then
              [ $(jq 'length' <<< "${checks}") -gt 0 ] || exit 1
              jq -r '.[].status' <<< "${checks}" | grep -q '^COMPLETED$' && exit 0
            fi

            continue
          done

      # on closed
      - name: Get PR number
        if: github.event.action == 'closed'
        id: pr
        run: |
          echo "number=$(gh pr list --head ${{ env.pr_branch }} --draft --json number --jq '.[0].number')" >> $GITHUB_OUTPUT

      # on closed
      - name: Close pull request
        if: github.event.action == 'closed' && steps.pr.outputs.number != ''
        uses: peter-evans/close-pull@f47e95b46e45ebf8a3a792e3a60e831ec2563f81 # v2.0.1
        with:
          token: ${{ secrets.FLOWZONE_TOKEN }}
          repository: ${{ matrix.repository }}
          pull-request-number: ${{ steps.pr.outputs.number }}
          comment: Auto-closing pull request
          delete-branch: true